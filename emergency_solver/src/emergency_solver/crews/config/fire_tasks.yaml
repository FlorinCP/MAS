handle_fire_people_report:
  description: >
    Manage the report related to the Fire people crew by coordinating with the Firefighter and Rescuer agents.
  steps: >
    1. Read Dispatcher Pydantic output for the Fire people crew.  
    2. Contact both the Firefighter and the Rescuer agents (in parallel) to gather information about the available resources.  
  expected_output: >
    Information about the necessities of the emergency in terms of firefighting and rescuing to obtain the best resource allocation from both the Firefighter and Rescuer agents.
  schema:
    agent: commander

craft_fire_people_action_plan:
  description: >
    Develop the Fire people section of the action plan based on inputs from the Firefighter and Rescuer agents.
  steps: >
    1. Listen to the proposals of the other agents (Firefighter and Rescuer).  
    2. Create the Fire people section of the action plan.  
    3. Report the Fire people action plan to the Dispatcher.
  expected_output: >
    A detailed Fire people section of the action plan, validated and ready for submission to the Dispatcher.
  schema:
    agent: commander

allocate_fire_extinguishing_resources:
  description: >
    Determine and allocate the necessary resources for fire-extinguishing operations.
  steps: >
    1. Receive the request from the Commander.  
    2. Read available fire-extinguishing resources in the {fire_resources} file.  
    3. Decide which resources should be sent, including computing distances between the scene and the resource locations.  
    4. Send the final decision back to the Commander.
  expected_output: >
    A list of fire-extinguishing resources and their deployment plan, sent to the Commander.
  schema:
    agent: firefighter

allocate_rescuing_resources:
  description: >
    Decide and allocate the necessary resources for rescuing potential victims in the {rescue_resources} file.
  steps: >
    1. Receive the request from the Commander.  
    2. Read available rescuing resources.  
    3. Decide which resources should be sent, including computing distances between the scene and the resource locations.  
    4. Send the final decision back to the Commander.
  expected_output: >
    A list of rescuing resources and their deployment plan, sent to the Commander.
  schema:
    agent: rescuer